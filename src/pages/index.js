import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.scss'
import {
  ACCESS_TYPES,
  BRAND_NAME,
  GET_HOME_BANNER_URL,
  BASE_URL,
} from '@/constants'
import { useDispatch, useSelector } from 'react-redux'
import {
  CategorySectionSlider,
  HeroSection,
  CategorySelectionSection,
  ProductSection,
} from '@/components'
import dataHandler from '@/services/data-handler'
import { useContext, useEffect } from 'react'
import {
  getCountriesRequest,
  userLoginRequest,
  userLogOutRequest,
} from '@/store/slicers/user'
import { MainContext } from '@/context/MainContext'
import { getCall } from '@/services/services'
import { getBannerRequest } from '@/actions'
import { getSectionsRequest } from '@/actions/generalActions'

const inter = Inter({ subsets: ['latin'] })

export default function Home(props) {
  const { MainState, dispatch } = useContext(MainContext)
  // const state = useSelector((state) => state)
  // const dispatch = useDispatch()
  // console.log({ state }, dataHandler.store.getState().user.user.jwt)
  const banners = props?.banners.data?.data
  const sections = props?.banners.data?.data

  useEffect(() => {
    console.log('MainState : ', MainState)
  }, [MainState])
  return (
    <>
      <Head>
        <title>{BRAND_NAME}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.page_wrapper}>
        <HeroSection banners={banners || []} />
        <CategorySectionSlider />
        <CategorySelectionSection />
        <ProductSection sections={sections || []} />
      </div>
    </>
  )
}

export async function getServerSideProps() {
  const banners = await getBannerRequest()
  const sections = await getSectionsRequest()

  // Pass data to the page via props
  return {
    props: {
      banners,
      sections,
      accessType: ACCESS_TYPES.PUBLIC,
    },
  }
}
