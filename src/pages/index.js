import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.scss'
import {
  ACCESS_TYPES,
  BRAND_NAME,
  GET_HOME_BANNER_URL,
  BASE_URL,
  GET_SECTIONS_URL,
  GET_CATEGORY_URL,
  GET_ALL_CATEGORY_PRODUCTS_URL,
} from '@/constants'
import {
  CategorySectionSlider,
  HeroSection,
  CategorySelectionSection,
  ProductSection,
} from '@/components'
import { useContext, useState } from 'react'

import { MainContext } from '@/context/MainContext'
import { getCall } from '@/services/services'
import { request } from '@/actions'
import { useRouter } from 'next/router'

const inter = Inter({ subsets: ['latin'] })

export default function Home(props) {
  const { MainState, dispatch } = useContext(MainContext)
  const router = useRouter()
  const [selectedcategory, setselectedcategory] = useState(null)
  // const state = useSelector((state) => state)
  // const dispatch = useDispatch()
  // console.log({ state }, dataHandler.store.getState().user.user.jwt)
  const banners = props?.banners?.data?.data || null
  const sections = props?.banners?.data?.data || null
  const categories = props?.categories?.data?.data || null
  const categoriesProducts = props?.categoriesProducts?.data?.data || null

  // useEffect(() => {}, [MainState])

  const handleSelectedCategory = (id) => {
    setselectedcategory(id)
  }

  const handleRoute = (url) => {
    router.push(url)
  }
  return (
    <>
      <Head>
        <title>{BRAND_NAME}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.page_wrapper}>
        <HeroSection banners={banners || []} />
        <CategorySectionSlider
          categories={categoriesProducts || []}
          selectedcategory={selectedcategory}
          handleSelectedCategory={handleSelectedCategory}
          handleRoute={handleRoute}
        />
        {categoriesProducts?.length > 0 && (
          <CategorySelectionSection
            selectedcategory={selectedcategory}
            products={
              selectedcategory
                ? categoriesProducts?.find((dt) => dt?._id == selectedcategory)
                    ?.products
                : categoriesProducts[0]?.products || []
            }
          />
        )}
      </div>
    </>
  )
}

export async function getStaticProps() {
  const banners = await request({ apiurl: GET_HOME_BANNER_URL })
  const sections = await request({ apiurl: GET_SECTIONS_URL })
  const categories = await request({ apiurl: GET_CATEGORY_URL })
  const categoriesProducts = await request({
    apiurl: GET_ALL_CATEGORY_PRODUCTS_URL,
  })
  console.log({ banners })
  // Pass data to the page via props
  return {
    props: {
      banners,
      categories,
      categoriesProducts,
      sections,
      accessType: ACCESS_TYPES.PUBLIC,
    },
  }
}
